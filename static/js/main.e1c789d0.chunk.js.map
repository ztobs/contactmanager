{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","MyProvider","dispatch","setState","axios","get","res","this","data","Provider","value","props","children","Component","Contact","showContactInfo","onDeleteClick","a","delete","context","name","email","phone","className","icon","faSortDown","onClick","style","cursor","faTimes","float","color","bind","to","faPencilAlt","marginRight","contextType","Contacts","Fragment","key","Header","branding","faHome","faPlus","faQuestion","defaultProps","prototype","PropTypes","string","isRequireds","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","post","history","push","EditContact","match","params","put","Test","title","body","fetch","then","response","json","App","basename","process","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e1c789d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport const Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class MyProvider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\n      \"https://my-json-server.typicode.com/ztobs/demo/users\"\n    );\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSortDown,\n  faTimes,\n  faPencilAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nimport { Context } from \"../../Context\";\n\nclass Contact extends Component {\n  static contextType = Context;\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async id => {\n    await axios.delete(\n      `https://my-json-server.typicode.com/ztobs/demo/users/${id}`\n    );\n    this.context.dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{\" \"}\n          <FontAwesomeIcon\n            icon={faSortDown}\n            onClick={() => {\n              this.setState({ showContactInfo: !this.state.showContactInfo });\n            }}\n            style={{ cursor: \"pointer\" }}\n          />\n          <FontAwesomeIcon\n            icon={faTimes}\n            style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <FontAwesomeIcon\n              icon={faPencilAlt}\n              style={{\n                cursor: \"pointer\",\n                float: \"right\",\n                color: \"black\",\n                marginRight: \"1rem\"\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Context } from \"../../Context\";\n\nclass Contacts extends Component {\n  static contextType = Context;\n  render() {\n    const { contacts } = this.context;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faPlus, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <div className=\"navbar navbar-expand navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faHome} /> Home\n              </Link>\n            </li>\n            <li className=\"navbar-nav\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faPlus} /> Add\n              </Link>\n            </li>\n            <li className=\"navbar-nav\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <FontAwesomeIcon icon={faQuestion} /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.prototype = {\n  branding: PropTypes.string.isRequireds\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n          type={type}\n          className={classnames(\"form-control form-control-lg\", {\n            \"is-invalid\": error\n          })}\n          placeholder={placeholder}\n          name={name}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"invalid-feedback\">{error}</div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Context } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nexport default class AddContact extends Component {\n  static contextType = Context;\n\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n\n    const res = await axios.post(\n      \"https://my-json-server.typicode.com/ztobs/demo/users\",\n      this.state\n    );\n    this.context.dispatch({\n      type: \"ADD_CONTACT\",\n      payload: res.data\n    });\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <div>\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">Add Contact</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <TextInputGroup\n                name=\"name\"\n                label=\"Name\"\n                placeholder=\"Enter Name...\"\n                value={name}\n                onChange={this.onChange}\n                error={errors.name}\n              />\n              <TextInputGroup\n                name=\"email\"\n                label=\"Email\"\n                placeholder=\"Enter Email...\"\n                value={email}\n                onChange={this.onChange}\n                type=\"email\"\n                error={errors.email}\n              />\n              <TextInputGroup\n                name=\"phone\"\n                label=\"Phone\"\n                placeholder=\"Enter Phone...\"\n                value={phone}\n                onChange={this.onChange}\n                error={errors.phone}\n              />\n              <input\n                type=\"submit\"\n                value=\"Add Contact\"\n                className=\"btn btn-success btn-block\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Context } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nexport default class EditContact extends Component {\n  static contextType = Context;\n\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://my-json-server.typicode.com/ztobs/demo/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://my-json-server.typicode.com/ztobs/demo/users/${id}`,\n      this.state\n    );\n    this.context.dispatch({ payload: res.data, type: \"UPDATE_CONTACT\" });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <div>\n        <div className=\"card mb-3\">\n          <div className=\"card-header\">Edit Contact</div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <TextInputGroup\n                name=\"name\"\n                label=\"Name\"\n                placeholder=\"Enter Name...\"\n                value={name}\n                onChange={this.onChange}\n                error={errors.name}\n              />\n              <TextInputGroup\n                name=\"email\"\n                label=\"Email\"\n                placeholder=\"Enter Email...\"\n                value={email}\n                onChange={this.onChange}\n                type=\"email\"\n                error={errors.email}\n              />\n              <TextInputGroup\n                name=\"phone\"\n                label=\"Phone\"\n                placeholder=\"Enter Phone...\"\n                value={phone}\n                onChange={this.onChange}\n                error={errors.phone}\n              />\n              <input\n                type=\"submit\"\n                value=\"Update Contact\"\n                className=\"btn btn-success btn-block\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage Contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nexport default class Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ title: data.title, body: data.body });\n      });\n  }\n  //   componentWillMount() {\n  //     console.log(\"Component will mount\");\n  //   }\n  //   componentDidUpdate() {\n  //     console.log(\"Component did update\");\n  //   }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { MyProvider } from \"./Context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <MyProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </MyProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}